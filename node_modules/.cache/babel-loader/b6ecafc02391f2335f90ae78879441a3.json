{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _PickerMixin = _interopRequireDefault(require(\"./PickerMixin\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\n;\n\nvar Picker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Picker, _React$Component);\n\n  function Picker(props) {\n    var _this;\n\n    _classCallCheck(this, Picker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Picker).call(this, props));\n\n    _this.scrollHanders = function () {\n      var scrollY = -1;\n      var lastY = 0;\n      var startY = 0;\n      var scrollDisabled = false;\n      var isMoving = false;\n\n      var setTransform = function setTransform(nodeStyle, value) {\n        nodeStyle.transform = value;\n        nodeStyle.webkitTransform = value;\n      };\n\n      var setTransition = function setTransition(nodeStyle, value) {\n        nodeStyle.transition = value;\n        nodeStyle.webkitTransition = value;\n      };\n\n      var scrollTo = function scrollTo(_x, y) {\n        var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : .3;\n\n        if (scrollY !== y) {\n          scrollY = y;\n\n          if (time && !_this.props.noAnimate) {\n            setTransition(_this.contentRef.style, \"cubic-bezier(0,0,0.2,1.15) \".concat(time, \"s\"));\n          }\n\n          setTransform(_this.contentRef.style, \"translate3d(0,\".concat(-y, \"px,0)\"));\n          setTimeout(function () {\n            _this.scrollingComplete();\n\n            if (_this.contentRef) {\n              setTransition(_this.contentRef.style, '');\n            }\n          }, +time * 1000);\n        }\n      };\n\n      var Velocity = function () {\n        var minInterval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n        var maxInterval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n        var _time = 0;\n        var _y = 0;\n        var _velocity = 0;\n        var recorder = {\n          record: function record(y) {\n            var now = +new Date();\n            _velocity = (y - _y) / (now - _time);\n\n            if (now - _time >= minInterval) {\n              _velocity = now - _time <= maxInterval ? _velocity : 0;\n              _y = y;\n              _time = now;\n            }\n          },\n          getVelocity: function getVelocity(y) {\n            if (y !== _y) {\n              recorder.record(y);\n            }\n\n            return _velocity;\n          }\n        };\n        return recorder;\n      }();\n\n      var onFinish = function onFinish() {\n        isMoving = false;\n        var targetY = scrollY;\n        var height = (_this.props.children.length - 1) * _this.itemHeight;\n        var time = .3;\n        var velocity = Velocity.getVelocity(targetY) * 4;\n\n        if (velocity) {\n          targetY = velocity * 40 + targetY;\n          time = Math.abs(velocity) * .1;\n        }\n\n        if (targetY % _this.itemHeight !== 0) {\n          targetY = Math.round(targetY / _this.itemHeight) * _this.itemHeight;\n        }\n\n        if (targetY < 0) {\n          targetY = 0;\n        } else if (targetY > height) {\n          targetY = height;\n        }\n\n        scrollTo(0, targetY, time < .3 ? .3 : time);\n\n        _this.onScrollChange();\n      };\n\n      var onStart = function onStart(y) {\n        if (scrollDisabled) {\n          return;\n        }\n\n        isMoving = true;\n        startY = y;\n        lastY = scrollY;\n      };\n\n      var onMove = function onMove(y) {\n        if (scrollDisabled || !isMoving) {\n          return;\n        }\n\n        scrollY = lastY - y + startY;\n        Velocity.record(scrollY);\n\n        _this.onScrollChange();\n\n        setTransform(_this.contentRef.style, \"translate3d(0,\".concat(-scrollY, \"px,0)\"));\n      };\n\n      return {\n        touchstart: function touchstart(evt) {\n          return onStart(evt.touches[0].pageY);\n        },\n        mousedown: function mousedown(evt) {\n          return onStart(evt.pageY);\n        },\n        touchmove: function touchmove(evt) {\n          evt.preventDefault();\n          onMove(evt.touches[0].pageY);\n        },\n        mousemove: function mousemove(evt) {\n          evt.preventDefault();\n          onMove(evt.pageY);\n        },\n        touchend: function touchend() {\n          return onFinish();\n        },\n        touchcancel: function touchcancel() {\n          return onFinish();\n        },\n        mouseup: function mouseup() {\n          return onFinish();\n        },\n        getValue: function getValue() {\n          return scrollY;\n        },\n        scrollTo: scrollTo,\n        setDisabled: function setDisabled() {\n          var disabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          scrollDisabled = disabled;\n        }\n      };\n    }();\n\n    _this.scrollTo = function (top) {\n      _this.scrollHanders.scrollTo(0, top);\n    };\n\n    _this.scrollToWithoutAnimation = function (top) {\n      _this.scrollHanders.scrollTo(0, top, 0);\n    };\n\n    _this.fireValueChange = function (selectedValue) {\n      if (selectedValue !== _this.state.selectedValue) {\n        if (!('selectedValue' in _this.props)) {\n          _this.setState({\n            selectedValue: selectedValue\n          });\n        }\n\n        if (_this.props.onValueChange) {\n          _this.props.onValueChange(selectedValue);\n        }\n      }\n    };\n\n    _this.onScrollChange = function () {\n      var top = _this.scrollHanders.getValue();\n\n      if (top >= 0) {\n        var children = React.Children.toArray(_this.props.children);\n\n        var index = _this.props.computeChildIndex(top, _this.itemHeight, children.length);\n\n        if (_this.scrollValue !== index) {\n          _this.scrollValue = index;\n          var child = children[index];\n\n          if (child && _this.props.onScrollChange) {\n            _this.props.onScrollChange(child.props.value);\n          } else if (!child && console.warn) {\n            console.warn('child not found', children, index);\n          }\n        }\n      }\n    };\n\n    _this.scrollingComplete = function () {\n      var top = _this.scrollHanders.getValue();\n\n      if (top >= 0) {\n        _this.props.doScrollingComplete(top, _this.itemHeight, _this.fireValueChange);\n      }\n    };\n\n    var selectedValueState;\n    var _this$props = _this.props,\n        selectedValue = _this$props.selectedValue,\n        defaultSelectedValue = _this$props.defaultSelectedValue;\n\n    if (selectedValue !== undefined) {\n      selectedValueState = selectedValue;\n    } else if (defaultSelectedValue !== undefined) {\n      selectedValueState = defaultSelectedValue;\n    } else {\n      var children = React.Children.toArray(_this.props.children);\n      selectedValueState = children && children[0] && children[0].props.value;\n    }\n\n    _this.state = {\n      selectedValue: selectedValueState\n    };\n    return _this;\n  }\n\n  _createClass(Picker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var contentRef = this.contentRef,\n          indicatorRef = this.indicatorRef,\n          maskRef = this.maskRef,\n          rootRef = this.rootRef;\n      var rootHeight = rootRef.getBoundingClientRect().height; // https://github.com/react-component/m-picker/issues/18\n\n      var itemHeight = this.itemHeight = indicatorRef.getBoundingClientRect().height;\n      var num = Math.floor(rootHeight / itemHeight);\n\n      if (num % 2 === 0) {\n        num--;\n      }\n\n      num--;\n      num /= 2;\n      contentRef.style.padding = \"\".concat(itemHeight * num, \"px 0\");\n      indicatorRef.style.top = \"\".concat(itemHeight * num, \"px\");\n      maskRef.style.backgroundSize = \"100% \".concat(itemHeight * num, \"px\");\n      this.scrollHanders.setDisabled(this.props.disabled);\n      this.props.select(this.state.selectedValue, this.itemHeight, this.scrollTo);\n      var passiveSupported = this.passiveSupported();\n      var willPreventDefault = passiveSupported ? {\n        passive: false\n      } : false;\n      var willNotPreventDefault = passiveSupported ? {\n        passive: true\n      } : false;\n      Object.keys(this.scrollHanders).forEach(function (key) {\n        if (key.indexOf('touch') === 0 || key.indexOf('mouse') === 0) {\n          var pd = key.indexOf('move') >= 0 ? willPreventDefault : willNotPreventDefault;\n          rootRef.addEventListener(key, _this2.scrollHanders[key], pd);\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this3 = this;\n\n      Object.keys(this.scrollHanders).forEach(function (key) {\n        if (key.indexOf('touch') === 0 || key.indexOf('mouse') === 0) {\n          _this3.rootRef.removeEventListener(key, _this3.scrollHanders[key]);\n        }\n      });\n    }\n  }, {\n    key: \"passiveSupported\",\n    value: function passiveSupported() {\n      var passiveSupported = false;\n\n      try {\n        var options = Object.defineProperty({}, 'passive', {\n          get: function get() {\n            passiveSupported = true;\n          }\n        });\n        window.addEventListener('test', null, options);\n      } catch (err) {}\n\n      return passiveSupported;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this4 = this;\n\n      if ('selectedValue' in nextProps) {\n        if (this.state.selectedValue !== nextProps.selectedValue) {\n          this.setState({\n            selectedValue: nextProps.selectedValue\n          }, function () {\n            _this4.props.select(nextProps.selectedValue, _this4.itemHeight, nextProps.noAnimate ? _this4.scrollToWithoutAnimation : _this4.scrollTo);\n          });\n        }\n      }\n\n      this.scrollHanders.setDisabled(nextProps.disabled);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.selectedValue !== nextState.selectedValue || this.props.children !== nextProps.children;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.props.select(this.state.selectedValue, this.itemHeight, this.scrollToWithoutAnimation);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      if ('selectedValue' in this.props) {\n        return this.props.selectedValue;\n      }\n\n      var children = React.Children.toArray(this.props.children);\n      return children && children[0] && children[0].props.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _pickerCls,\n          _this5 = this;\n\n      var props = this.props;\n      var prefixCls = props.prefixCls,\n          itemStyle = props.itemStyle,\n          indicatorStyle = props.indicatorStyle,\n          _props$indicatorClass = props.indicatorClassName,\n          indicatorClassName = _props$indicatorClass === void 0 ? '' : _props$indicatorClass,\n          children = props.children;\n      var selectedValue = this.state.selectedValue;\n      var itemClassName = \"\".concat(prefixCls, \"-item\");\n      var selectedItemClassName = \"\".concat(itemClassName, \" \").concat(prefixCls, \"-item-selected\");\n\n      var map = function map(item) {\n        var _item$props = item.props,\n            _item$props$className = _item$props.className,\n            className = _item$props$className === void 0 ? '' : _item$props$className,\n            style = _item$props.style,\n            value = _item$props.value;\n        return React.createElement(\"div\", {\n          style: _extends({}, itemStyle, style),\n          className: \"\".concat(selectedValue === value ? selectedItemClassName : itemClassName, \" \").concat(className),\n          key: value\n        }, item.children || item.props.children);\n      }; // compatibility for preact\n\n\n      var items = React.Children ? React.Children.map(children, map) : [].concat(children).map(map);\n      var pickerCls = (_pickerCls = {}, _defineProperty(_pickerCls, props.className, !!props.className), _defineProperty(_pickerCls, prefixCls, true), _pickerCls);\n      return React.createElement(\"div\", {\n        className: (0, _classnames[\"default\"])(pickerCls),\n        ref: function ref(el) {\n          return _this5.rootRef = el;\n        },\n        style: this.props.style\n      }, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-mask\"),\n        ref: function ref(el) {\n          return _this5.maskRef = el;\n        }\n      }), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-indicator \").concat(indicatorClassName),\n        ref: function ref(el) {\n          return _this5.indicatorRef = el;\n        },\n        style: indicatorStyle\n      }), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content\"),\n        ref: function ref(el) {\n          return _this5.contentRef = el;\n        }\n      }, items));\n    }\n  }]);\n\n  return Picker;\n}(React.Component);\n\nPicker.defaultProps = {\n  prefixCls: 'rmc-picker'\n};\n\nvar _default = (0, _PickerMixin[\"default\"])(Picker);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}