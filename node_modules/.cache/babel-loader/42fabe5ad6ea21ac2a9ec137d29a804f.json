{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classnames from 'classnames';\nimport React from 'react';\nimport List from '../list';\nimport Checkbox from './Checkbox';\nvar ListItem = List.Item; // tslint:disable-next-line:no-empty\n\nfunction noop() {}\n\nvar CheckboxItem = function (_React$Component) {\n  _inherits(CheckboxItem, _React$Component);\n\n  function CheckboxItem() {\n    _classCallCheck(this, CheckboxItem);\n\n    return _possibleConstructorReturn(this, (CheckboxItem.__proto__ || Object.getPrototypeOf(CheckboxItem)).apply(this, arguments));\n  }\n\n  _createClass(CheckboxItem, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          listPrefixCls = _a.listPrefixCls,\n          onChange = _a.onChange,\n          disabled = _a.disabled,\n          checkboxProps = _a.checkboxProps,\n          onClick = _a.onClick,\n          restProps = __rest(_a, [\"listPrefixCls\", \"onChange\", \"disabled\", \"checkboxProps\", \"onClick\"]);\n\n      var prefixCls = restProps.prefixCls,\n          className = restProps.className,\n          children = restProps.children;\n      var wrapCls = classnames(prefixCls + '-item', className, _defineProperty({}, prefixCls + '-item-disabled', disabled === true)); // Note: if not omit `onChange`, it will trigger twice on check listitem\n\n      if (!disabled) {\n        restProps.onClick = onClick || noop;\n      }\n\n      var extraProps = {};\n      ['name', 'defaultChecked', 'checked', 'onChange', 'disabled'].forEach(function (i) {\n        if (i in _this2.props) {\n          extraProps[i] = _this2.props[i];\n        }\n      });\n      return React.createElement(ListItem, _extends({}, restProps, {\n        prefixCls: listPrefixCls,\n        className: wrapCls,\n        thumb: React.createElement(Checkbox, _extends({}, checkboxProps, extraProps))\n      }), children);\n    }\n  }]);\n\n  return CheckboxItem;\n}(React.Component);\n\nexport default CheckboxItem;\nCheckboxItem.defaultProps = {\n  prefixCls: 'am-checkbox',\n  listPrefixCls: 'am-list',\n  checkboxProps: {}\n};","map":null,"metadata":{},"sourceType":"module"}