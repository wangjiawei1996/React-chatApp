{"ast":null,"code":"import _objectSpread from \"/Users/wangjiawei/Desktop/react-chat/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from \"axios\";\nvar REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nvar ERROR_MSG = 'ERROR_MSG';\nvar initState = {\n  isAuth: false,\n  msg: '',\n  user: '',\n  pwd: '',\n  type: '' // reducer\n\n};\nexport function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n      return _objectSpread({}, state, {\n        msg: '',\n        isAuth: true\n      }, action.payload);\n\n    case ERROR_MSG:\n      return _objectSpread({}, state, {\n        isAuth: false,\n        msg: action.msg\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction registerSuccess(data) {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: data\n  };\n}\n\nfunction errorMsg(msg) {\n  return {\n    msg: msg,\n    type: ERROR_MSG\n  };\n}\n\nexport function register(_ref) {\n  var user = _ref.user,\n      pwd = _ref.pwd,\n      repeatpwd = _ref.repeatpwd,\n      type = _ref.type;\n\n  if (!user || !pwd || !type) {\n    return errorMsg('用户密码必须输入');\n  }\n\n  if (pwd !== repeatpwd) {\n    return errorMsg('密码和确认密码不同');\n  }\n\n  return function (dispatch) {\n    axios.post('/user/register', {\n      user: user,\n      pwd: pwd,\n      type: type\n    }).then(function (res) {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(registerSuccess({\n          user: user,\n          pwd: pwd,\n          type: type\n        }));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/wangjiawei/Desktop/react-chat/src/redux/user.redux.js"],"names":["axios","REGISTER_SUCCESS","ERROR_MSG","initState","isAuth","msg","user","pwd","type","state","action","payload","registerSuccess","data","errorMsg","register","repeatpwd","dispatch","post","then","res","status","code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,gBAAgB,GAAG,kBAAzB;AACA,IAAMC,SAAS,GAAG,WAAlB;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAE,KADQ;AAEhBC,EAAAA,GAAG,EAAE,EAFW;AAGhBC,EAAAA,IAAI,EAAE,EAHU;AAIhBC,EAAAA,GAAG,EAAE,EAJW;AAKhBC,EAAAA,IAAI,EAAE,EALU,CAOlB;;AAPkB,CAAlB;AAQA,OAAO,SAASF,IAAT,GAAyC;AAAA,MAA3BG,KAA2B,uEAAnBN,SAAmB;AAAA,MAARO,MAAQ;;AAC9C,UAAOA,MAAM,CAACF,IAAd;AACE,SAAKP,gBAAL;AACE,+BAAWQ,KAAX;AAAkBJ,QAAAA,GAAG,EAAC,EAAtB;AAA0BD,QAAAA,MAAM,EAAE;AAAlC,SAA2CM,MAAM,CAACC,OAAlD;;AACF,SAAKT,SAAL;AACE,+BAAWO,KAAX;AAAkBL,QAAAA,MAAM,EAAE,KAA1B;AAAiCC,QAAAA,GAAG,EAAEK,MAAM,CAACL;AAA7C;;AACF;AACE,aAAOI,KAAP;AANJ;AAQD;;AACD,SAASG,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,SAAO;AAAEL,IAAAA,IAAI,EAAEP,gBAAR;AAA0BU,IAAAA,OAAO,EAAEE;AAAnC,GAAP;AACD;;AACD,SAASC,QAAT,CAAmBT,GAAnB,EAAwB;AACtB,SAAO;AAAEA,IAAAA,GAAG,EAAHA,GAAF;AAAOG,IAAAA,IAAI,EAAEN;AAAb,GAAP;AACD;;AACD,OAAO,SAASa,QAAT,OAA6C;AAAA,MAA1BT,IAA0B,QAA1BA,IAA0B;AAAA,MAArBC,GAAqB,QAArBA,GAAqB;AAAA,MAAjBS,SAAiB,QAAjBA,SAAiB;AAAA,MAAPR,IAAO,QAAPA,IAAO;;AAClD,MAAI,CAACF,IAAD,IAAS,CAACC,GAAV,IAAiB,CAACC,IAAtB,EAA4B;AAC1B,WAAOM,QAAQ,CAAC,UAAD,CAAf;AACD;;AACD,MAAIP,GAAG,KAAKS,SAAZ,EAAuB;AACrB,WAAOF,QAAQ,CAAC,WAAD,CAAf;AACD;;AACD,SAAO,UAAAG,QAAQ,EAAI;AACjBjB,IAAAA,KAAK,CAACkB,IAAN,CAAW,gBAAX,EAA6B;AAACZ,MAAAA,IAAI,EAAJA,IAAD;AAAOC,MAAAA,GAAG,EAAHA,GAAP;AAAYC,MAAAA,IAAI,EAAJA;AAAZ,KAA7B,EACGW,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACP,IAAJ,CAASS,IAAT,KAAkB,CAA5C,EAA+C;AAC7CL,QAAAA,QAAQ,CAACL,eAAe,CAAC;AAACN,UAAAA,IAAI,EAAJA,IAAD;AAAOC,UAAAA,GAAG,EAAHA,GAAP;AAAYC,UAAAA,IAAI,EAAJA;AAAZ,SAAD,CAAhB,CAAR;AACD,OAFD,MAEO;AACLS,QAAAA,QAAQ,CAACH,QAAQ,CAACM,GAAG,CAACP,IAAJ,CAASR,GAAV,CAAT,CAAR;AACD;AACF,KAPH;AAQD,GATD;AAUD","sourcesContent":["import axios from \"axios\";\n\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nconst ERROR_MSG = 'ERROR_MSG';\nconst initState = {\n  isAuth: false,\n  msg: '',\n  user: '',\n  pwd: '',\n  type: ''\n}\n// reducer\nexport function user(state = initState, action) {\n  switch(action.type) {\n    case REGISTER_SUCCESS:\n      return {...state, msg:'', isAuth: true, ...action.payload}\n    case ERROR_MSG:\n      return {...state, isAuth: false, msg: action.msg}\n    default:\n      return state\n  }\n}\nfunction registerSuccess(data) {\n  return { type: REGISTER_SUCCESS, payload: data}\n}\nfunction errorMsg (msg) {\n  return { msg, type: ERROR_MSG }\n}\nexport function register({user,pwd,repeatpwd,type}) {\n  if (!user || !pwd || !type) {\n    return errorMsg('用户密码必须输入')\n  }\n  if (pwd !== repeatpwd) {\n    return errorMsg('密码和确认密码不同')\n  }\n  return dispatch => {\n    axios.post('/user/register', {user, pwd, type})\n      .then(res => {\n        if (res.status === 200 && res.data.code === 0) {\n          dispatch(registerSuccess({user, pwd, type}))\n        } else {\n          dispatch(errorMsg(res.data.msg))\n        }\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}