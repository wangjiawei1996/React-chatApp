{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classnames from 'classnames';\nimport React from 'react';\n\nvar Switch = function (_React$Component) {\n  _inherits(Switch, _React$Component);\n\n  function Switch() {\n    _classCallCheck(this, Switch);\n\n    var _this = _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).apply(this, arguments));\n\n    _this.onChange = function (e) {\n      var checked = e.target.checked;\n\n      if (_this.props.onChange) {\n        _this.props.onChange(checked);\n      }\n    };\n\n    _this.onClick = function (e) {\n      if (_this.props.onClick) {\n        var val = void 0; // tslint:disable-next-line:prefer-conditional-expression\n\n        if (e && e.target && e.target.checked !== undefined) {\n          val = e.target.checked;\n        } else {\n          val = _this.props.checked;\n        }\n\n        _this.props.onClick(val);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Switch, [{\n    key: 'render',\n    value: function render() {\n      var _a = this.props,\n          prefixCls = _a.prefixCls,\n          name = _a.name,\n          checked = _a.checked,\n          disabled = _a.disabled,\n          className = _a.className,\n          platform = _a.platform,\n          color = _a.color,\n          restProps = __rest(_a, [\"prefixCls\", \"name\", \"checked\", \"disabled\", \"className\", \"platform\", \"color\"]);\n\n      var wrapCls = classnames(prefixCls, className, _defineProperty({}, prefixCls + '-android', platform === 'android'));\n      var fackInputCls = classnames('checkbox', _defineProperty({}, 'checkbox-disabled', disabled));\n      var globalProps = Object.keys(restProps).reduce(function (prev, key) {\n        if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {\n          prev[key] = restProps[key];\n        }\n\n        return prev;\n      }, {});\n      var style = this.props.style || {};\n\n      if (color && checked) {\n        style.backgroundColor = color;\n      }\n\n      return React.createElement('label', {\n        className: wrapCls\n      }, React.createElement('input', _extends({\n        type: 'checkbox',\n        name: name,\n        className: prefixCls + '-checkbox',\n        disabled: disabled,\n        checked: checked,\n        onChange: this.onChange,\n        value: checked ? 'on' : 'off'\n      }, !disabled ? {\n        onClick: this.onClick\n      } : {}, globalProps)), React.createElement('div', _extends({\n        className: fackInputCls,\n        style: style\n      }, disabled ? {\n        onClick: this.onClick\n      } : {})));\n    }\n  }]);\n\n  return Switch;\n}(React.Component);\n\nexport default Switch;\nSwitch.defaultProps = {\n  prefixCls: 'am-switch',\n  name: '',\n  checked: false,\n  disabled: false,\n  onChange: function onChange() {},\n  platform: 'ios',\n  onClick: function onClick() {}\n};","map":null,"metadata":{},"sourceType":"module"}