{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/*\n * https://github.com/jasonslyvia/react-marquee\n * remove PC\n * support React Element for text prop\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar Marquee = function (_React$Component) {\n  _inherits(Marquee, _React$Component);\n\n  function Marquee() {\n    _classCallCheck(this, Marquee);\n\n    var _this = _possibleConstructorReturn(this, (Marquee.__proto__ || Object.getPrototypeOf(Marquee)).apply(this, arguments));\n\n    _this.state = {\n      animatedWidth: 0,\n      overflowWidth: 0\n    };\n    return _this;\n  }\n\n  _createClass(Marquee, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._measureText();\n\n      this._startAnimation();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._measureText();\n\n      if (!this._marqueeTimer) {\n        this._startAnimation();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this._marqueeTimer);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          className = _props.className,\n          text = _props.text;\n\n      var style = _extends({\n        position: 'relative',\n        right: this.state.animatedWidth,\n        whiteSpace: 'nowrap',\n        display: 'inline-block'\n      }, this.props.style);\n\n      return React.createElement('div', {\n        className: prefixCls + '-marquee-wrap ' + className,\n        style: {\n          overflow: 'hidden'\n        },\n        role: 'marquee'\n      }, React.createElement('div', {\n        ref: function ref(el) {\n          return _this2.textRef = el;\n        },\n        className: prefixCls + '-marquee',\n        style: style\n      }, text));\n    }\n  }, {\n    key: '_startAnimation',\n    value: function _startAnimation() {\n      var _this3 = this;\n\n      if (this._marqueeTimer) {\n        window.clearTimeout(this._marqueeTimer);\n      }\n\n      var fps = this.props.fps;\n      var TIMEOUT = 1 / fps * 1000;\n      var isLeading = this.state.animatedWidth === 0;\n      var timeout = isLeading ? this.props.leading : TIMEOUT;\n\n      var animate = function animate() {\n        var overflowWidth = _this3.state.overflowWidth;\n        var animatedWidth = _this3.state.animatedWidth + 1;\n        var isRoundOver = animatedWidth > overflowWidth;\n\n        if (isRoundOver) {\n          if (_this3.props.loop) {\n            animatedWidth = 0;\n          } else {\n            return;\n          }\n        }\n\n        if (isRoundOver && _this3.props.trailing) {\n          _this3._marqueeTimer = window.setTimeout(function () {\n            _this3.setState({\n              animatedWidth: animatedWidth\n            });\n\n            _this3._marqueeTimer = window.setTimeout(animate, TIMEOUT);\n          }, _this3.props.trailing);\n        } else {\n          _this3.setState({\n            animatedWidth: animatedWidth\n          });\n\n          _this3._marqueeTimer = window.setTimeout(animate, TIMEOUT);\n        }\n      };\n\n      if (this.state.overflowWidth !== 0) {\n        this._marqueeTimer = window.setTimeout(animate, timeout);\n      }\n    }\n  }, {\n    key: '_measureText',\n    value: function _measureText() {\n      var container = ReactDOM.findDOMNode(this);\n      var node = this.textRef;\n\n      if (container && node) {\n        var containerWidth = container.offsetWidth;\n        var textWidth = node.offsetWidth;\n        var overflowWidth = textWidth - containerWidth;\n\n        if (overflowWidth !== this.state.overflowWidth) {\n          this.setState({\n            overflowWidth: overflowWidth\n          });\n        }\n      }\n    }\n  }]);\n\n  return Marquee;\n}(React.Component);\n\nexport default Marquee;\nMarquee.defaultProps = {\n  text: '',\n  loop: false,\n  leading: 500,\n  trailing: 800,\n  fps: 40,\n  className: ''\n};","map":null,"metadata":{},"sourceType":"module"}