{"ast":null,"code":"import _objectSpread from \"/Users/wangjiawei/Desktop/react-chat/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from \"axios\";\nimport { getRedirectPath } from '../util';\nvar REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nvar LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nvar ERROR_MSG = 'ERROR_MSG';\nvar LOAD_DATA = 'LOAD_DATA';\nvar initState = {\n  redirectTo: '',\n  isAuth: false,\n  msg: '',\n  user: '',\n  pwd: '',\n  type: '' // reducer\n\n};\nexport function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n      return _objectSpread({}, state, {\n        msg: '',\n        redirectTo: getRedirectPath(action.payload),\n        isAuth: true\n      }, action.payload);\n\n    case LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        msg: '',\n        redirectTo: getRedirectPath(action.payload),\n        isAuth: true\n      }, action.payload);\n\n    case LOAD_DATA:\n      return _objectSpread({}, state, action.payload);\n\n    case ERROR_MSG:\n      return _objectSpread({}, state, {\n        isAuth: false,\n        msg: action.msg\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction registerSuccess(data) {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: data\n  };\n}\n\nfunction loginSuccess(data) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: data\n  };\n}\n\nfunction errorMsg(msg) {\n  return {\n    msg: msg,\n    type: ERROR_MSG\n  };\n}\n\nexport function userinfo() {\n  var _this = this;\n\n  axios.get('/user/info').then(function (res) {\n    if (res.status === 200) {\n      if (res.data.code === 0) {} else {\n        _this.props.history.push('/login');\n      }\n    }\n  });\n}\nexport function login(_ref) {\n  var user = _ref.user,\n      pwd = _ref.pwd;\n\n  if (!user || !pwd) {\n    return errorMsg('用户名和密码必须输入');\n  }\n\n  return function (dispatch) {\n    axios.post('/user/login', {\n      user: user,\n      pwd: pwd\n    }).then(function (res) {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(loginSuccess(res.data.data));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}\nexport function register(_ref2) {\n  var user = _ref2.user,\n      pwd = _ref2.pwd,\n      repeatpwd = _ref2.repeatpwd,\n      type = _ref2.type;\n\n  if (!user || !pwd || !type) {\n    return errorMsg('用户密码必须输入');\n  }\n\n  if (pwd !== repeatpwd) {\n    return errorMsg('密码和确认密码不同');\n  }\n\n  return function (dispatch) {\n    axios.post('/user/register', {\n      user: user,\n      pwd: pwd,\n      type: type\n    }).then(function (res) {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(registerSuccess({\n          user: user,\n          pwd: pwd,\n          type: type\n        }));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/wangjiawei/Desktop/react-chat/src/redux/user.redux.js"],"names":["axios","getRedirectPath","REGISTER_SUCCESS","LOGIN_SUCCESS","ERROR_MSG","LOAD_DATA","initState","redirectTo","isAuth","msg","user","pwd","type","state","action","payload","registerSuccess","data","loginSuccess","errorMsg","userinfo","get","then","res","status","code","props","history","push","login","dispatch","post","register","repeatpwd"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport { getRedirectPath } from '../util'\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst ERROR_MSG = 'ERROR_MSG';\nconst LOAD_DATA = 'LOAD_DATA'\nconst initState = {\n  redirectTo: '',\n  isAuth: false,\n  msg: '',\n  user: '',\n  pwd: '',\n  type: ''\n}\n// reducer\nexport function user(state = initState, action) {\n  switch(action.type) {\n    case REGISTER_SUCCESS:\n      return {...state, msg:'', redirectTo: getRedirectPath(action.payload), isAuth: true, ...action.payload}\n    case LOGIN_SUCCESS:\n      return {...state, msg:'', redirectTo: getRedirectPath(action.payload), isAuth: true, ...action.payload}\n    case LOAD_DATA:\n      return {...state, ...action.payload}\n    case ERROR_MSG:\n      return {...state, isAuth: false, msg: action.msg}\n    default:\n      return state\n  }\n}\nfunction registerSuccess(data) {\n  return { type: REGISTER_SUCCESS, payload: data}\n}\nfunction loginSuccess(data) {\n  return { type: LOGIN_SUCCESS, payload: data}\n}\nfunction errorMsg (msg) {\n  return { msg, type: ERROR_MSG }\n}\nexport function userinfo() {\n  axios.get('/user/info')\n    .then(res => {\n      if (res.status === 200) {\n        if (res.data.code === 0) {\n\n        } else {\n          this.props.history.push('/login')\n        }\n      }\n    })\n}\nexport function login({user, pwd}) {\n  if (!user||!pwd) {\n    return errorMsg('用户名和密码必须输入')\n  }\n  return dispatch => {\n    axios.post('/user/login', {user, pwd})\n      .then(res => {\n        if (res.status === 200&&res.data.code === 0) {\n          dispatch(loginSuccess(res.data.data))\n        } else {\n          dispatch(errorMsg(res.data.msg))\n        }\n      })\n  }\n}\nexport function register({user,pwd,repeatpwd,type}) {\n  if (!user || !pwd || !type) {\n    return errorMsg('用户密码必须输入')\n  }\n  if (pwd !== repeatpwd) {\n    return errorMsg('密码和确认密码不同')\n  }\n  return dispatch => {\n    axios.post('/user/register', {user, pwd, type})\n      .then(res => {\n        if (res.status === 200 && res.data.code === 0) {\n          dispatch(registerSuccess({user, pwd, type}))\n        } else {\n          dispatch(errorMsg(res.data.msg))\n        }\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}