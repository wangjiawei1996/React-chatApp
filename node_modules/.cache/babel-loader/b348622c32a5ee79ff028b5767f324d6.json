{"ast":null,"code":"import _classCallCheck from \"/Users/wangjiawei/Desktop/react-chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wangjiawei/Desktop/react-chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wangjiawei/Desktop/react-chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wangjiawei/Desktop/react-chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wangjiawei/Desktop/react-chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wangjiawei/Desktop/react-chat/src/component/navlink/navlink.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBar } from 'antd-mobile';\nimport { withRouter } from 'react-router-dom';\n\nvar NavLinkBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NavLinkBar, _React$Component);\n\n  function NavLinkBar() {\n    _classCallCheck(this, NavLinkBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NavLinkBar).apply(this, arguments));\n  }\n\n  _createClass(NavLinkBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navList = this.props.data.filter(function (v) {\n        return !v.hide;\n      });\n      var pathname = this.props.location;\n      return React.createElement(TabBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, navList.map(function (v) {\n        return React.createElement(TabBar.Item, {\n          key: v.path,\n          title: v.text,\n          icon: {\n            uri: require(\"./img/\".concat(v.icon, \".png\"))\n          },\n          selectrdiIcon: {\n            url: require(\"./img/\".concat(v.icon, \"-active.png\"))\n          },\n          selected: pathname === v.path,\n          onPress: function onPress() {\n            _this.props.history.push(v.path);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return NavLinkBar;\n}(React.Component);\n\nNavLinkBar.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default NavLinkBar;","map":{"version":3,"sources":["/Users/wangjiawei/Desktop/react-chat/src/component/navlink/navlink.js"],"names":["React","PropTypes","TabBar","withRouter","NavLinkBar","navList","props","data","filter","v","hide","pathname","location","map","path","text","uri","require","icon","url","history","push","Component","propTypes","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;IACMC,U;;;;;;;;;;;;;6BAIK;AAAA;;AACP,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,UAAAC,CAAC;AAAA,eAAI,CAACA,CAAC,CAACC,IAAP;AAAA,OAAxB,CAAhB;AACA,UAAMC,QAAQ,GAAG,KAAKL,KAAL,CAAWM,QAA5B;AACA,aACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,OAAO,CAACQ,GAAR,CAAY,UAAAJ,CAAC;AAAA,eACZ,oBAAC,MAAD,CAAQ,IAAR;AACE,UAAA,GAAG,EAAEA,CAAC,CAACK,IADT;AAEE,UAAA,KAAK,EAAEL,CAAC,CAACM,IAFX;AAGE,UAAA,IAAI,EAAE;AAACC,YAAAA,GAAG,EAACC,OAAO,iBAAUR,CAAC,CAACS,IAAZ;AAAZ,WAHR;AAIE,UAAA,aAAa,EAAE;AAACC,YAAAA,GAAG,EAACF,OAAO,iBAAUR,CAAC,CAACS,IAAZ;AAAZ,WAJjB;AAKE,UAAA,QAAQ,EAAEP,QAAQ,KAAKF,CAAC,CAACK,IAL3B;AAME,UAAA,OAAO,EAAI,mBAAM;AACf,YAAA,KAAI,CAACR,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwBZ,CAAC,CAACK,IAA1B;AACD,WARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY;AAAA,OAAb,CADH,CADF;AAkBD;;;;EAzBsBd,KAAK,CAACsB,S;;AAAzBlB,U,CACGmB,S,GAAY;AACjBhB,EAAAA,IAAI,EAAEN,SAAS,CAACuB,KAAV,CAAgBC;AADL,C;AA0BrB,eAAerB,UAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { TabBar } from 'antd-mobile';\nimport {withRouter} from 'react-router-dom'\nclass NavLinkBar extends React.Component {\n  static propTypes = {\n    data: PropTypes.array.isRequired\n  }\n  render() {\n    const navList = this.props.data.filter(v => !v.hide)\n    const pathname = this.props.location\n    return (\n      <TabBar>\n        {navList.map(v => (\n          <TabBar.Item\n            key={v.path}\n            title={v.text}\n            icon={{uri:require(`./img/${v.icon}.png`)}}\n            selectrdiIcon={{url:require(`./img/${v.icon}-active.png`)}}\n            selected={pathname === v.path }\n            onPress = {() => {\n              this.props.history.push(v.path)\n            }}\n          >\n\n          </TabBar.Item>\n        ))}\n      </TabBar>\n    )\n  }\n}\nexport default NavLinkBar"]},"metadata":{},"sourceType":"module"}