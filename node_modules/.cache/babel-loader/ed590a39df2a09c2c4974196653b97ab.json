{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classnames from 'classnames';\nimport React from 'react';\nimport TouchFeedback from 'rmc-feedback';\n\nvar Item = function (_React$Component) {\n  _inherits(Item, _React$Component);\n\n  function Item() {\n    _classCallCheck(this, Item);\n\n    return _possibleConstructorReturn(this, (Item.__proto__ || Object.getPrototypeOf(Item)).apply(this, arguments));\n  }\n\n  _createClass(Item, [{\n    key: 'render',\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          className = _a.className,\n          prefixCls = _a.prefixCls,\n          icon = _a.icon,\n          disabled = _a.disabled,\n          firstItem = _a.firstItem,\n          activeStyle = _a.activeStyle,\n          restProps = __rest(_a, [\"children\", \"className\", \"prefixCls\", \"icon\", \"disabled\", \"firstItem\", \"activeStyle\"]);\n\n      var cls = classnames(prefixCls + '-item', className, _defineProperty({}, prefixCls + '-item-disabled', disabled));\n      var activeClass = prefixCls + '-item-active ';\n\n      if (firstItem) {\n        activeClass += prefixCls + '-item-fix-active-arrow';\n      }\n\n      return React.createElement(TouchFeedback, {\n        disabled: disabled,\n        activeClassName: activeClass,\n        activeStyle: activeStyle\n      }, React.createElement('div', _extends({\n        className: cls\n      }, restProps), React.createElement('div', {\n        className: prefixCls + '-item-container'\n      }, icon ? // tslint:disable-next-line:jsx-no-multiline-js\n      React.createElement('span', {\n        className: prefixCls + '-item-icon',\n        'aria-hidden': 'true'\n      }, icon) : null, React.createElement('span', {\n        className: prefixCls + '-item-content'\n      }, children))));\n    }\n  }]);\n\n  return Item;\n}(React.Component);\n\nexport default Item;\nItem.defaultProps = {\n  prefixCls: 'am-popover',\n  disabled: false\n};\nItem.myName = 'PopoverItem';","map":null,"metadata":{},"sourceType":"module"}