{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport closest from '../_util/closest';\nimport Modal from './Modal';\nexport default function operation() {\n  var actions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [{\n    text: '确定'\n  }];\n  var platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ios';\n  var closed = false;\n  var prefixCls = 'am-modal';\n  var div = document.createElement('div');\n  document.body.appendChild(div);\n\n  function close() {\n    ReactDOM.unmountComponentAtNode(div);\n\n    if (div && div.parentNode) {\n      div.parentNode.removeChild(div);\n    }\n  }\n\n  var footer = actions.map(function (button) {\n    // tslint:disable-next-line:only-arrow-functions\n    var orginPress = button.onPress || function () {};\n\n    button.onPress = function () {\n      if (closed) {\n        return;\n      }\n\n      var res = orginPress();\n\n      if (res && res.then) {\n        res.then(function () {\n          closed = true;\n          close();\n        })['catch'](function () {});\n      } else {\n        closed = true;\n        close();\n      }\n    };\n\n    return button;\n  });\n\n  function onWrapTouchStart(e) {\n    if (!/iPhone|iPod|iPad/i.test(navigator.userAgent)) {\n      return;\n    }\n\n    var pNode = closest(e.target, '.am-modal-footer');\n\n    if (!pNode) {\n      e.preventDefault();\n    }\n  }\n\n  ReactDOM.render(React.createElement(Modal, {\n    visible: true,\n    operation: true,\n    transparent: true,\n    prefixCls: prefixCls,\n    transitionName: 'am-zoom',\n    closable: false,\n    maskClosable: true,\n    onClose: close,\n    footer: footer,\n    maskTransitionName: 'am-fade',\n    className: 'am-modal-operation',\n    platform: platform,\n    wrapProps: {\n      onTouchStart: onWrapTouchStart\n    }\n  }), div);\n  return {\n    close: close\n  };\n}","map":null,"metadata":{},"sourceType":"module"}