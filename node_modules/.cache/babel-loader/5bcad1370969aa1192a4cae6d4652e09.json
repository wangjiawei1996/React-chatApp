{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classnames from 'classnames';\nimport React from 'react';\nimport Icon from '../icon';\nimport Marquee from './Marquee';\n\nvar NoticeBar = function (_React$Component) {\n  _inherits(NoticeBar, _React$Component);\n\n  function NoticeBar(props) {\n    _classCallCheck(this, NoticeBar);\n\n    var _this = _possibleConstructorReturn(this, (NoticeBar.__proto__ || Object.getPrototypeOf(NoticeBar)).call(this, props));\n\n    _this.onClick = function () {\n      var _this$props = _this.props,\n          mode = _this$props.mode,\n          onClick = _this$props.onClick;\n\n      if (onClick) {\n        onClick();\n      }\n\n      if (mode === 'closable') {\n        _this.setState({\n          show: false\n        });\n      }\n    };\n\n    _this.state = {\n      show: true\n    };\n    return _this;\n  }\n\n  _createClass(NoticeBar, [{\n    key: 'render',\n    value: function render() {\n      var _a = this.props,\n          mode = _a.mode,\n          icon = _a.icon,\n          onClick = _a.onClick,\n          children = _a.children,\n          className = _a.className,\n          prefixCls = _a.prefixCls,\n          action = _a.action,\n          marqueeProps = _a.marqueeProps,\n          restProps = __rest(_a, [\"mode\", \"icon\", \"onClick\", \"children\", \"className\", \"prefixCls\", \"action\", \"marqueeProps\"]);\n\n      var extraProps = {};\n      var operationDom = null;\n\n      if (mode === 'closable') {\n        operationDom = React.createElement('div', {\n          className: prefixCls + '-operation',\n          onClick: this.onClick,\n          role: 'button',\n          'aria-label': 'close'\n        }, action ? action : React.createElement(Icon, {\n          type: 'cross',\n          size: 'md'\n        }));\n      } else {\n        if (mode === 'link') {\n          operationDom = React.createElement('div', {\n            className: prefixCls + '-operation',\n            role: 'button',\n            'aria-label': 'go to detail'\n          }, action ? action : React.createElement(Icon, {\n            type: 'right',\n            size: 'md'\n          }));\n        }\n\n        extraProps.onClick = onClick;\n      }\n\n      var wrapCls = classnames(prefixCls, className);\n      return this.state.show ? React.createElement('div', _extends({\n        className: wrapCls\n      }, restProps, extraProps, {\n        role: 'alert'\n      }), icon && // tslint:disable-next-line:jsx-no-multiline-js\n      React.createElement('div', {\n        className: prefixCls + '-icon',\n        'aria-hidden': 'true'\n      }, icon), React.createElement('div', {\n        className: prefixCls + '-content'\n      }, React.createElement(Marquee, _extends({\n        prefixCls: prefixCls,\n        text: children\n      }, marqueeProps))), operationDom) : null;\n    }\n  }]);\n\n  return NoticeBar;\n}(React.Component);\n\nexport default NoticeBar;\nNoticeBar.defaultProps = {\n  prefixCls: 'am-notice-bar',\n  mode: '',\n  icon: React.createElement(Icon, {\n    type: 'voice',\n    size: 'xxs'\n  }),\n  onClick: function onClick() {}\n};","map":null,"metadata":{},"sourceType":"module"}