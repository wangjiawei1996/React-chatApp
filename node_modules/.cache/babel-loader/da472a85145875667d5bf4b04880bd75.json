{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* tslint:disable:jsx-no-multiline-js */\n\nimport classnames from 'classnames';\nimport React from 'react';\nimport Button from '../button';\n\nvar Result = function (_React$Component) {\n  _inherits(Result, _React$Component);\n\n  function Result() {\n    _classCallCheck(this, Result);\n\n    return _possibleConstructorReturn(this, (Result.__proto__ || Object.getPrototypeOf(Result)).apply(this, arguments));\n  }\n\n  _createClass(Result, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          className = _props.className,\n          style = _props.style,\n          img = _props.img,\n          imgUrl = _props.imgUrl,\n          title = _props.title,\n          message = _props.message,\n          buttonText = _props.buttonText,\n          onButtonClick = _props.onButtonClick,\n          buttonType = _props.buttonType;\n      var imgContent = null;\n\n      if (img) {\n        imgContent = React.createElement('div', {\n          className: prefixCls + '-pic'\n        }, img);\n      } else if (imgUrl) {\n        imgContent = React.createElement('div', {\n          className: prefixCls + '-pic',\n          style: {\n            backgroundImage: 'url(' + imgUrl + ')'\n          }\n        });\n      }\n\n      return React.createElement('div', {\n        className: classnames(prefixCls, className),\n        style: style,\n        role: 'alert'\n      }, imgContent, title ? React.createElement('div', {\n        className: prefixCls + '-title'\n      }, title) : null, message ? React.createElement('div', {\n        className: prefixCls + '-message'\n      }, message) : null, buttonText ? React.createElement('div', {\n        className: prefixCls + '-button'\n      }, React.createElement(Button, {\n        type: buttonType,\n        onClick: onButtonClick\n      }, buttonText)) : null);\n    }\n  }]);\n\n  return Result;\n}(React.Component);\n\nexport default Result;\nResult.defaultProps = {\n  prefixCls: 'am-result',\n  buttonType: '',\n  onButtonClick: function onButtonClick() {}\n};","map":null,"metadata":{},"sourceType":"module"}