{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n/* tslint:disable:no-console */\n\n\nimport * as React from 'react';\n;\n\nvar Item = function Item(_props) {\n  return null;\n};\n\nexport default function (ComposedComponent) {\n  var _a;\n\n  return _a =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(_a, _React$Component);\n\n    function _a() {\n      var _this;\n\n      _classCallCheck(this, _a);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(_a).apply(this, arguments));\n\n      _this.select = function (value, itemHeight, scrollTo) {\n        var children = React.Children.toArray(_this.props.children);\n\n        for (var i = 0, len = children.length; i < len; i++) {\n          if (children[i].props.value === value) {\n            _this.selectByIndex(i, itemHeight, scrollTo);\n\n            return;\n          }\n        }\n\n        _this.selectByIndex(0, itemHeight, scrollTo);\n      };\n\n      _this.doScrollingComplete = function (top, itemHeight, fireValueChange) {\n        var children = React.Children.toArray(_this.props.children);\n\n        var index = _this.computeChildIndex(top, itemHeight, children.length);\n\n        var child = children[index];\n\n        if (child) {\n          fireValueChange(child.props.value);\n        } else if (console.warn) {\n          console.warn('child not found', children, index);\n        }\n      };\n\n      return _this;\n    }\n\n    _createClass(_a, [{\n      key: \"selectByIndex\",\n      value: function selectByIndex(index, itemHeight, zscrollTo) {\n        if (index < 0 || index >= React.Children.count(this.props.children) || !itemHeight) {\n          return;\n        }\n\n        zscrollTo(index * itemHeight);\n      }\n    }, {\n      key: \"computeChildIndex\",\n      value: function computeChildIndex(top, itemHeight, childrenLength) {\n        var index = Math.round(top / itemHeight);\n        return Math.min(index, childrenLength - 1);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(ComposedComponent, _extends({}, this.props, {\n          doScrollingComplete: this.doScrollingComplete,\n          computeChildIndex: this.computeChildIndex,\n          select: this.select\n        }));\n      }\n    }]);\n\n    return _a;\n  }(React.Component), _a.Item = Item, _a;\n}","map":null,"metadata":{},"sourceType":"module"}