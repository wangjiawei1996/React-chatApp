{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classnames from 'classnames';\nimport RcCheckbox from 'rc-checkbox';\nimport React from 'react';\n\nvar Checkbox = function (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n\n    return _possibleConstructorReturn(this, (Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).apply(this, arguments));\n  }\n\n  _createClass(Checkbox, [{\n    key: 'render',\n    value: function render() {\n      var _a = this.props,\n          className = _a.className,\n          style = _a.style,\n          restProps = __rest(_a, [\"className\", \"style\"]);\n\n      var prefixCls = restProps.prefixCls,\n          children = restProps.children;\n      var wrapCls = classnames(prefixCls + '-wrapper', className); // Todo: wait for https://github.com/developit/preact-compat/issues/422, then we can remove class below\n\n      if ('class' in restProps) {\n        /* tslint:disable:no-string-literal */\n        delete restProps['class'];\n      }\n\n      var mark = React.createElement('label', {\n        className: wrapCls,\n        style: style\n      }, React.createElement(RcCheckbox, restProps), children);\n\n      if (this.props.wrapLabel) {\n        return mark;\n      }\n\n      return React.createElement(RcCheckbox, this.props);\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\n\nexport default Checkbox;\nCheckbox.defaultProps = {\n  prefixCls: 'am-checkbox',\n  wrapLabel: true\n};","map":null,"metadata":{},"sourceType":"module"}