{"ast":null,"code":"import _classCallCheck from \"babel-runtime/helpers/classCallCheck\";\nimport _createClass from \"babel-runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"babel-runtime/helpers/possibleConstructorReturn\";\nimport _inherits from \"babel-runtime/helpers/inherits\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component } from 'react';\n\nvar LazyRenderBox = function (_Component) {\n  _inherits(LazyRenderBox, _Component);\n\n  function LazyRenderBox() {\n    _classCallCheck(this, LazyRenderBox);\n\n    return _possibleConstructorReturn(this, (LazyRenderBox.__proto__ || Object.getPrototypeOf(LazyRenderBox)).apply(this, arguments));\n  }\n\n  _createClass(LazyRenderBox, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.hiddenClassName || nextProps.visible;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          hiddenClassName = _a.hiddenClassName,\n          visible = _a.visible,\n          props = __rest(_a, [\"hiddenClassName\", \"visible\"]);\n\n      if (hiddenClassName || React.Children.count(props.children) > 1) {\n        if (!visible && hiddenClassName) {\n          props.className += \" \" + hiddenClassName;\n        }\n\n        return React.createElement(\"div\", props);\n      }\n\n      return React.Children.only(props.children);\n    }\n  }]);\n\n  return LazyRenderBox;\n}(Component);\n\nexport default LazyRenderBox;","map":null,"metadata":{},"sourceType":"module"}