{"ast":null,"code":"import _objectSpread from \"/Users/wangjiawei/Desktop/react-chat/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from \"axios\";\nimport { getRedirectPath } from '../util';\nvar AUTH_SUCCESS = 'AUTH_SUCCESS';\nvar ERROR_MSG = 'ERROR_MSG';\nvar LOAD_DATA = 'LOAD_DATA';\nvar initState = {\n  redirectTo: '',\n  msg: '',\n  user: '',\n  type: '' // reducer\n\n};\nexport function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return _objectSpread({}, state, {\n        msg: '',\n        redirectTo: getRedirectPath(action.payload)\n      }, action.payload);\n\n    case LOAD_DATA:\n      return _objectSpread({}, state, action.payload);\n\n    case ERROR_MSG:\n      return _objectSpread({}, state, {\n        isAuth: false,\n        msg: action.msg\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction authSuccess(data) {\n  return {\n    type: AUTH_SUCCESS,\n    payload: data\n  };\n}\n\nfunction errorMsg(msg) {\n  return {\n    msg: msg,\n    type: ERROR_MSG\n  };\n}\n\nexport function loadData(userinfo) {\n  return {\n    type: LOAD_DATA,\n    payload: userinfo\n  };\n}\nexport function update(data) {\n  return function (dispatch) {\n    axios.post('/user/update', data).then(function (res) {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(authSuccess(res.data.data));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}\nexport function login(_ref) {\n  var user = _ref.user,\n      pwd = _ref.pwd;\n\n  if (!user || !pwd) {\n    return errorMsg('用户名和密码必须输入');\n  }\n\n  return function (dispatch) {\n    axios.post('/user/login', {\n      user: user,\n      pwd: pwd\n    }).then(function (res) {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(authSuccess(res.data.data));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}\nexport function register(_ref2) {\n  var user = _ref2.user,\n      pwd = _ref2.pwd,\n      repeatpwd = _ref2.repeatpwd,\n      type = _ref2.type;\n\n  if (!user || !pwd || !type) {\n    return errorMsg('用户密码必须输入');\n  }\n\n  if (pwd !== repeatpwd) {\n    return errorMsg('密码和确认密码不同');\n  }\n\n  return function (dispatch) {\n    axios.post('/user/register', {\n      user: user,\n      pwd: pwd,\n      type: type\n    }).then(function (res) {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(authSuccess({\n          user: user,\n          pwd: pwd,\n          type: type\n        }));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/wangjiawei/Desktop/react-chat/src/redux/user.redux.js"],"names":["axios","getRedirectPath","AUTH_SUCCESS","ERROR_MSG","LOAD_DATA","initState","redirectTo","msg","user","type","state","action","payload","isAuth","authSuccess","data","errorMsg","loadData","userinfo","update","dispatch","post","then","res","status","code","login","pwd","register","repeatpwd"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport { getRedirectPath } from '../util'\nconst AUTH_SUCCESS = 'AUTH_SUCCESS'\nconst ERROR_MSG = 'ERROR_MSG';\nconst LOAD_DATA = 'LOAD_DATA'\nconst initState = {\n  redirectTo: '',\n  msg: '',\n  user: '',\n  type: ''\n}\n// reducer\nexport function user(state = initState, action) {\n  switch(action.type) {\n    case AUTH_SUCCESS:\n      return {...state, msg:'', redirectTo: getRedirectPath(action.payload), ...action.payload}\n    case LOAD_DATA:\n      return {...state, ...action.payload}\n    case ERROR_MSG:\n      return {...state, isAuth: false, msg: action.msg}\n    default:\n      return state\n  }\n}\nfunction authSuccess(data) {\n  return {type: AUTH_SUCCESS, payload:data}\n}\nfunction errorMsg (msg) {\n  return { msg, type: ERROR_MSG }\n}\nexport function loadData(userinfo) {\n  return { type: LOAD_DATA, payload:userinfo}\n}\nexport function update(data) {\n  return dispatch => {\n    axios.post('/user/update', data)\n      .then(res => {\n        if (res.status === 200&&res.data.code === 0) {\n          dispatch(authSuccess(res.data.data))\n        } else {\n          dispatch(errorMsg(res.data.msg))\n        }\n      })\n  }\n}\nexport function login({user, pwd}) {\n  if (!user||!pwd) {\n    return errorMsg('用户名和密码必须输入')\n  }\n  return dispatch => {\n    axios.post('/user/login', {user, pwd})\n      .then(res => {\n        if (res.status === 200&&res.data.code === 0) {\n          dispatch(authSuccess(res.data.data))\n        } else {\n          dispatch(errorMsg(res.data.msg))\n        }\n      })\n  }\n}\nexport function register({user,pwd,repeatpwd,type}) {\n  if (!user || !pwd || !type) {\n    return errorMsg('用户密码必须输入')\n  }\n  if (pwd !== repeatpwd) {\n    return errorMsg('密码和确认密码不同')\n  }\n  return dispatch => {\n    axios.post('/user/register', {user, pwd, type})\n      .then(res => {\n        if (res.status === 200 && res.data.code === 0) {\n          dispatch(authSuccess({user, pwd, type}))\n        } else {\n          dispatch(errorMsg(res.data.msg))\n        }\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}