{"ast":null,"code":"import * as React from 'react';\nimport Modal from 'rmc-dialog';\nimport PopupMixin from './PopupMixin';\nimport Touchable from 'rmc-feedback';\n\nvar getModal = function getModal(props, visible, _ref) {\n  var getContent = _ref.getContent,\n      hide = _ref.hide,\n      onDismiss = _ref.onDismiss,\n      onOk = _ref.onOk;\n\n  if (!visible) {\n    return null;\n  }\n\n  var prefixCls = props.prefixCls;\n  return React.createElement(Modal, {\n    prefixCls: \"\".concat(prefixCls),\n    className: props.className || '',\n    visible: true,\n    closable: false,\n    transitionName: props.transitionName || props.popupTransitionName,\n    maskTransitionName: props.maskTransitionName,\n    onClose: hide,\n    style: props.style\n  }, React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-header\")\n  }, React.createElement(Touchable, {\n    activeClassName: \"\".concat(prefixCls, \"-item-active\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item \").concat(prefixCls, \"-header-left\"),\n    onClick: onDismiss\n  }, props.dismissText)), React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item \").concat(prefixCls, \"-title\")\n  }, props.title), React.createElement(Touchable, {\n    activeClassName: \"\".concat(prefixCls, \"-item-active\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item \").concat(prefixCls, \"-header-right\"),\n    onClick: onOk\n  }, props.okText))), getContent()));\n};\n\nexport default PopupMixin(getModal, {\n  prefixCls: 'rmc-picker-popup',\n  WrapComponent: 'span',\n  triggerType: 'onClick',\n  pickerValueProp: 'selectedValue',\n  pickerValueChangeProp: 'onValueChange'\n});","map":null,"metadata":{},"sourceType":"module"}