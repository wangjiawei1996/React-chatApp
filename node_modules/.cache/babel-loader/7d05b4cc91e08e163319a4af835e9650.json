{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport RcSteps from 'rmc-steps';\nimport Icon from '../icon';\n\nvar Steps = function (_React$Component) {\n  _inherits(Steps, _React$Component);\n\n  function Steps() {\n    _classCallCheck(this, Steps);\n\n    return _possibleConstructorReturn(this, (Steps.__proto__ || Object.getPrototypeOf(Steps)).apply(this, arguments));\n  }\n\n  _createClass(Steps, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.componentDidUpdate();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (this.props.direction !== 'horizontal') {\n        return;\n      } // set tail's left position based on main's width for each step dynamically.\n\n\n      this.stepRefs.forEach(function (s) {\n        if (s.refs.tail) {\n          s.refs.tail.style.left = s.refs.main.offsetWidth / 2 + 'px';\n        }\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      this.stepRefs = [];\n      var _props = this.props,\n          children = _props.children,\n          status = _props.status,\n          size = _props.size;\n      var current = this.props.current; // flattern the array at first https://github.com/ant-design/ant-design-mobile/issues/934\n\n      var filterChildren = [];\n\n      if (children && children.length) {\n        children.forEach(function (item) {\n          if (React.isValidElement(item)) {\n            filterChildren.push(item);\n          }\n        });\n      }\n\n      var newChildren = React.Children.map(filterChildren, function (item, index) {\n        var className = item.props.className;\n\n        if (index < filterChildren.length - 1 && filterChildren[index + 1].props.status === 'error') {\n          className = className ? className + ' error-tail' : 'error-tail';\n        }\n\n        var icon = item.props.icon;\n\n        if (!icon) {\n          if (index < current) {\n            // 对应 state: finish\n            icon = 'check-circle-o';\n          } else if (index > current) {\n            // 对应 state: wait\n            icon = 'ellipsis';\n            className = className ? className + ' ellipsis-item' : 'ellipsis-item';\n          }\n\n          if (status === 'error' && index === current || item.props.status === 'error') {\n            icon = 'cross-circle-o';\n          }\n        }\n\n        icon = typeof icon === 'string' ? React.createElement(Icon, {\n          type: icon,\n          size: size === 'small' ? status === 'wait' ? 'xxs' : 'xs' : 'md'\n        }) : icon;\n        return React.cloneElement(item, {\n          icon: icon,\n          className: className,\n          ref: function ref(c) {\n            return _this2.stepRefs[index] = c;\n          }\n        });\n      });\n      return React.createElement(RcSteps, _extends({\n        ref: function ref(el) {\n          return _this2.stepsRef = el;\n        }\n      }, this.props), newChildren);\n    }\n  }]);\n\n  return Steps;\n}(React.Component);\n\nexport default Steps;\nSteps.Step = RcSteps.Step;\nSteps.defaultProps = {\n  prefixCls: 'am-steps',\n  iconPrefix: 'ant',\n  labelPlacement: 'vertical',\n  direction: 'vertical',\n  current: 0\n};","map":null,"metadata":{},"sourceType":"module"}