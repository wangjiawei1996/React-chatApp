{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport RCDatePicker from 'rmc-date-picker/es/DatePicker';\nimport { getComponentLocale } from '../_util/getLocale';\n\nvar DatePickerView = function (_React$Component) {\n  _inherits(DatePickerView, _React$Component);\n\n  function DatePickerView() {\n    _classCallCheck(this, DatePickerView);\n\n    return _possibleConstructorReturn(this, (DatePickerView.__proto__ || Object.getPrototypeOf(DatePickerView)).apply(this, arguments));\n  }\n\n  _createClass(DatePickerView, [{\n    key: 'render',\n    value: function render() {\n      // tslint:disable-next-line:no-this-assignment\n      var props = this.props,\n          context = this.context;\n      var locale = getComponentLocale(props, context, 'DatePickerView', function () {\n        return require('./locale/zh_CN');\n      }); // DatePicker use `defaultDate`, maybe because there are PopupDatePicker inside? @yiminghe\n      // Here Use `date` instead of `defaultDate`, make it controlled fully.\n\n      return React.createElement(RCDatePicker, _extends({}, props, {\n        locale: locale,\n        date: props.value,\n        onDateChange: props.onChange,\n        onValueChange: props.onValueChange,\n        onScrollChange: props.onScrollChange\n      }));\n    }\n  }]);\n\n  return DatePickerView;\n}(React.Component);\n\nexport default DatePickerView;\nDatePickerView.defaultProps = {\n  mode: 'datetime',\n  extra: '请选择',\n  prefixCls: 'am-picker',\n  pickerPrefixCls: 'am-picker-col',\n  minuteStep: 1,\n  use12Hours: false\n};\nDatePickerView.contextTypes = {\n  antLocale: PropTypes.object\n};","map":null,"metadata":{},"sourceType":"module"}