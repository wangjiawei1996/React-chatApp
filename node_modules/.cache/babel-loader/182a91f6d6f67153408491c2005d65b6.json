{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport getDataAttr from '../_util/getDataAttr';\nimport Tabs from '../tabs';\nimport Tab from './Tab';\nexport var Item = function (_React$Component) {\n  _inherits(Item, _React$Component);\n\n  function Item() {\n    _classCallCheck(this, Item);\n\n    return _possibleConstructorReturn(this, (Item.__proto__ || Object.getPrototypeOf(Item)).apply(this, arguments));\n  }\n\n  _createClass(Item, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          style = _props.style;\n      return React.createElement('div', {\n        className: prefixCls,\n        style: style\n      }, this.props.children);\n    }\n  }]);\n\n  return Item;\n}(React.Component);\nItem.defaultProps = {\n  prefixCls: 'am-tab-bar-item',\n  title: ''\n};\n\nvar AntTabBar = function (_React$Component2) {\n  _inherits(AntTabBar, _React$Component2);\n\n  function AntTabBar() {\n    _classCallCheck(this, AntTabBar);\n\n    var _this2 = _possibleConstructorReturn(this, (AntTabBar.__proto__ || Object.getPrototypeOf(AntTabBar)).apply(this, arguments));\n\n    _this2.getTabs = function () {\n      return React.Children.map(_this2.props.children, function (c) {\n        return _extends({}, c.props);\n      });\n    };\n\n    _this2.renderTabBar = function () {\n      var _this2$props = _this2.props,\n          barTintColor = _this2$props.barTintColor,\n          prefixCls = _this2$props.prefixCls,\n          tintColor = _this2$props.tintColor,\n          unselectedTintColor = _this2$props.unselectedTintColor,\n          hidden = _this2$props.hidden,\n          tabBarPosition = _this2$props.tabBarPosition;\n\n      var tabsData = _this2.getTabs();\n\n      var content = Array.isArray(tabsData) ? tabsData.map(function (cProps, index) {\n        return React.createElement(Tab, {\n          key: index,\n          prefixCls: _this2.props.prefixCls + '-tab',\n          badge: cProps.badge,\n          dot: cProps.dot,\n          selected: cProps.selected,\n          icon: cProps.icon,\n          selectedIcon: cProps.selectedIcon,\n          title: cProps.title,\n          tintColor: tintColor,\n          unselectedTintColor: unselectedTintColor,\n          dataAttrs: getDataAttr(cProps),\n          onClick: function onClick() {\n            return cProps.onPress && cProps.onPress();\n          }\n        });\n      }) : null;\n      var cls = prefixCls + '-bar';\n\n      if (hidden) {\n        cls += ' ' + prefixCls + '-bar-hidden-' + tabBarPosition;\n      }\n\n      return React.createElement('div', {\n        className: cls,\n        style: {\n          backgroundColor: barTintColor\n        }\n      }, content);\n    };\n\n    return _this2;\n  }\n\n  _createClass(AntTabBar, [{\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          prefixCls = _props2.prefixCls,\n          children = _props2.children,\n          animated = _props2.animated,\n          swipeable = _props2.swipeable,\n          noRenderContent = _props2.noRenderContent,\n          prerenderingSiblingsNumber = _props2.prerenderingSiblingsNumber,\n          tabBarPosition = _props2.tabBarPosition;\n      var tabs = this.getTabs();\n      var activeIndex = 0;\n\n      if (Array.isArray(tabs)) {\n        tabs.forEach(function (tab, index) {\n          if (tab.selected) {\n            activeIndex = index;\n          }\n        });\n      }\n\n      return React.createElement('div', {\n        className: prefixCls\n      }, React.createElement(Tabs, {\n        tabs: tabs,\n        renderTabBar: this.renderTabBar,\n        tabBarPosition: tabBarPosition,\n        page: activeIndex < 0 ? undefined : activeIndex,\n        animated: animated,\n        swipeable: swipeable,\n        noRenderContent: noRenderContent,\n        prerenderingSiblingsNumber: prerenderingSiblingsNumber\n      }, children));\n    }\n  }]);\n\n  return AntTabBar;\n}(React.Component);\n\nAntTabBar.defaultProps = {\n  prefixCls: 'am-tab-bar',\n  barTintColor: 'white',\n  tintColor: '#108ee9',\n  hidden: false,\n  unselectedTintColor: '#888',\n  placeholder: '正在加载',\n  animated: false,\n  swipeable: false,\n  prerenderingSiblingsNumber: 1,\n  tabBarPosition: 'bottom'\n};\nAntTabBar.Item = Item;\nexport default AntTabBar;","map":null,"metadata":{},"sourceType":"module"}