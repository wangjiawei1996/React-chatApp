{"ast":null,"code":"import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* tslint:disable:jsx-no-multiline-js */\n\nimport classnames from 'classnames';\nimport React from 'react';\n\nvar ActivityIndicator = function (_React$Component) {\n  _inherits(ActivityIndicator, _React$Component);\n\n  function ActivityIndicator() {\n    _classCallCheck(this, ActivityIndicator);\n\n    return _possibleConstructorReturn(this, (ActivityIndicator.__proto__ || Object.getPrototypeOf(ActivityIndicator)).apply(this, arguments));\n  }\n\n  _createClass(ActivityIndicator, [{\n    key: 'render',\n    value: function render() {\n      var _classnames;\n\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          className = _props.className,\n          animating = _props.animating,\n          toast = _props.toast,\n          size = _props.size,\n          text = _props.text;\n      var wrapClass = classnames(prefixCls, className, (_classnames = {}, _defineProperty(_classnames, prefixCls + '-lg', size === 'large'), _defineProperty(_classnames, prefixCls + '-sm', size === 'small'), _defineProperty(_classnames, prefixCls + '-toast', !!toast), _classnames));\n      var spinnerClass = classnames(prefixCls + '-spinner', _defineProperty({}, prefixCls + '-spinner-lg', !!toast || size === 'large'));\n\n      if (animating) {\n        if (toast) {\n          return React.createElement('div', {\n            className: wrapClass\n          }, text ? React.createElement('div', {\n            className: prefixCls + '-content'\n          }, React.createElement('span', {\n            className: spinnerClass,\n            'aria-hidden': 'true'\n          }), React.createElement('span', {\n            className: prefixCls + '-toast'\n          }, text)) : React.createElement('div', {\n            className: prefixCls + '-content'\n          }, React.createElement('span', {\n            className: spinnerClass,\n            'aria-label': 'Loading'\n          })));\n        } else {\n          return text ? React.createElement('div', {\n            className: wrapClass\n          }, React.createElement('span', {\n            className: spinnerClass,\n            'aria-hidden': 'true'\n          }), React.createElement('span', {\n            className: prefixCls + '-tip'\n          }, text)) : React.createElement('div', {\n            className: wrapClass\n          }, React.createElement('span', {\n            className: spinnerClass,\n            'aria-label': 'loading'\n          }));\n        }\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return ActivityIndicator;\n}(React.Component);\n\nexport default ActivityIndicator;\nActivityIndicator.defaultProps = {\n  prefixCls: 'am-activity-indicator',\n  animating: true,\n  size: 'small',\n  panelColor: 'rgba(34,34,34,0.6)',\n  toast: false\n};","map":null,"metadata":{},"sourceType":"module"}